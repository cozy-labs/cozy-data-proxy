
name: Lint, test and package Cozy Desktop

# To debug a job, add the following step:
# - name: Debug with tmate
#   uses: mxschmitt/action-tmate@v3

on:
  push:
    branches:
      - main
  pull_request:

env:
  COZY_DESKTOP_DIR: "${{ github.workspace }}/cozy-desktop"
  COZY_STACK_STORAGE: "${{ github.workspace }}/storage"
  COZY_URL: "http://localhost:8080"
  COZY_PASSPHRASE: "cozy"
  GOPROXY: "https://proxy.golang.org"
  GO111MODULE: "on"
  # FIXME: Homebrew 1.7.3 fails to install cask apache-couchdb
  HOMEBREW_NO_AUTO_UPDATE: ${{ 1 }}
  NO_BREAKPOINTS: ${{ 1 }}
  NODE_ENV: "test"
  NPM_CONFIG_PROGRESS: ${{ false }}
  COZY_DESKTOP_HEARTBEAT: ${{ 1000 }}
  DISPLAY: ":99.0"

jobs:
  macos:
    runs-on: macos-latest
    name: macOS
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12.14.1'
          check-latest: true
      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.14'
      - name: Setup podman
        run: |
          curl -L https://github.com/boot2podman/machine/releases/download/v0.17/podman-machine.darwin-amd64 --output /usr/local/bin/podman-machine
          chmod +x /usr/local/bin/podman-machine
          podman-machine create box
      - name: Setup CouchDB
        run: |
          podman-machine ssh box -L 5984:localhost:5984 -N &
          podman-machine ssh box - sudo podman run -d -p 5984:5984 --name couch apache/couchdb:2.3.1
        #- name: Install imagemagick
        #  run: brew install imagemagick;
      - name: Download cozy-stack
        run: go get github.com/cozy/cozy-stack
      - name: Create cozy-stack storage
        run: |
          # Install podman-machine
          # Install sshfs
          brew cask install osxfuse
          curl -L https://github.com/osxfuse/sshfs/releases/download/osxfuse-sshfs-2.5.0/sshfs-2.5.0.pkg --output sshfs-2.5.0.pkg
          sudo installer -pkg ./sshfs-2.5.0.pkg -target /
          # Create linux VM and mount storage folder
          mkdir -p "$COZY_STACK_STORAGE"
          podman-machine ssh box -- mkdir /home/tc/storage
          podman-machine mount box:/home/tc/storage $COZY_STACK_STORAGE
      - name: Start cozy-stack server
        run: |
          cozy-stack serve --fs-url "file://$COZY_STACK_STORAGE" >cozy-stack.log 2>&1 &
      - name: Create local instance and OAuth client
        run: |
          sleep 1
          # echo "127.0.0.1 localhost cozy.tools" | sudo tee -a /etc/hosts
          cozy-stack instances add --dev --passphrase "$COZY_PASSPHRASE" localhost:8080
          COZY_CLIENT_ID=$(cozy-stack instances client-oauth localhost:8080 http://localhost/ test github.com/cozy-labs/cozy-desktop)
          COZY_STACK_TOKEN=$(cozy-stack instances token-oauth localhost:8080 "$COZY_CLIENT_ID" io.cozy.files io.cozy.settings)
          # Variables are not directly available in next steps; we need to write them into a special file
          echo "COZY_CLIENT_ID=$COZY_CLIENT_ID" >> $GITHUB_ENV
          echo "COZY_STACK_TOKEN=$COZY_STACK_TOKEN" >> $GITHUB_ENV
      - name: Create local synchronization dir
        env:
            COZY_DESKTOP_FS: APFS
        run: |
          hdiutil create -megabytes 50 -fs "$COZY_DESKTOP_FS" -volname cozy-desktop "$COZY_DESKTOP_DIR"
          hdiutil attach "${COZY_DESKTOP_DIR}.dmg" -mountpoint "$COZY_DESKTOP_DIR"
      - name: Create dummy .env.test file
        run: echo "NODE_ENV=test" > "${{ github.workspace }}/.env.test"
      - name: Install dependencies
        run: yarn install:all
      - name: Start Xvfb
        run: sudo Xvfb :99 -ac -screen 0 1024x768x8 &
      - name: Build elm
        run: yarn build:elm
      - name: World tests
        continue-on-error: true
        run: yarn test:world
      - name: Unit tests
        continue-on-error: true
        run: yarn test:unit
      - name: Integration tests
        continue-on-error: true
        run: yarn test:integration
      - name: Scenarios
        continue-on-error: true
        run: yarn test:scenarios
      - name: Build package
        run: yarn dist:all
