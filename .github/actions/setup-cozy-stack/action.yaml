name: Setup cozy-stack
author: Erwan Guyader
description: Downloads cozy-stack, starts it and create a test instance.
inputs:
  cozy-stack-storage:
    description: 'The folder location where the remote cozy-stack files will be stored'
    required: false
    default: ${{ env.COZY_STACK_STORAGE }}
  cozy-passphrase:
    description: 'The user passphrase of the created Cozy instance'
    required: false
    default: ${{ env.COZY_PASSPHRASE }}
runs:
  using: composite
  steps:
    - name: Download cozy-stack
      shell: bash
      run: go get github.com/cozy/cozy-stack

    - name: Create cozy-stack storage
      run: |
        mkdir -p "$INPUT_COZY-STACK-STORAGE"

        if [[ ${{ runner.os }} == "osx" ]]; then
          brew cask install osxfuse
          curl -L https://github.com/osxfuse/sshfs/releases/download/osxfuse-sshfs-2.5.0/sshfs-2.5.0.pkg --output sshfs-2.5.0.pkg
          sudo installer -pkg ./sshfs-2.5.0.pkg -target /
          podman-machine ssh box -- mkdir /home/tc/storage
          podman-machine mount box:/home/tc/storage $COZY_STACK_STORAGE
        fi

    - name: Create a local instance and an OAuth client
      shell: bash
      run: |
        cozy-stack serve --fs-url "file://$INPUT_COZY-STACK-STORAGE" --log-level warning >cozy-stack.log 2>&1 &
        sleep 1
        cozy-stack instances add --dev --passphrase "$INPUT_COZY-PASSPHRASE" localhost:8080
        COZY_CLIENT_ID=$(cozy-stack instances client-oauth localhost:8080 http://localhost/ test github.com/cozy-labs/cozy-desktop)
        COZY_STACK_TOKEN=$(cozy-stack instances token-oauth localhost:8080 "$COZY_CLIENT_ID" io.cozy.files io.cozy.settings)
        # Variables are not directly available in next steps; we need to write them into a special file
        echo "COZY_CLIENT_ID=$COZY_CLIENT_ID" >> $GITHUB_ENV
        echo "COZY_STACK_TOKEN=$COZY_STACK_TOKEN" >> $GITHUB_ENV
