---
dist: trusty
sudo: false
language: node_js
matrix:
    fast_finish: true
    include:
        - os: linux
          node_js: 8
          env: CXX=g++-4.8
          # @TODO macOS build is much slower
        - os: osx
          node_js: 8
env:
    global:
        - COZY_DESKTOP_DIR=/tmp/cozy-desktop
        - COZY_URL="http://localhost:8080"
        - COZY_PASSPHRASE="cozy"
        - GOPATH="$HOME"
        # FIXME: Homebrew 1.7.3 fails to install cask apache-couchdb
        - HOMEBREW_NO_AUTO_UPDATE=1
        - MOCHA_TIMEOUT="240000"
        - NODE_ENV=test
        - NPM_CONFIG_PROGRESS=false
        - COZY_DESKTOP_HEARTBEAT=1000
services:
    - docker
cache:
    yarn: true
    directories:
        - $HOME/.cache/electron
        - $HOME/.cache/electron-builder
addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
        packages:
            - gcc-4.8
            - g++-4.8

# install cozy stack for integration test
before_install:
    # FIXME: Homebrew 1.7.3 fails to install cask apache-couchdb
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew update;
        cd /usr/local/Homebrew;
        git reset --hard 1.7.2;
        cd -;
      fi

    # CouchDB 2
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        travis_retry docker run -d -p 5984:5984 --name couch apache/couchdb:2.1;
      fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        travis_retry brew cask install apache-couchdb;
        printf "\n[log]\nlevel = warn\n" >> /Applications/Apache\ CouchDB.app/Contents/Resources/couchdbx-core/etc/local.ini;
        ulimit -S -n 1024;
        (/Applications/Apache\ CouchDB.app/Contents/Resources/couchdbx-core/bin/couchdb >couchdb.log 2>&1 &);
      fi
    - sleep 5
    - curl -X PUT http://127.0.0.1:5984/{_users,_replicator,_global_changes}

    # Go 1.9
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        travis_retry brew install gimme;
        travis_retry brew install imagemagick;
      fi
    - travis_retry gimme 1.11
    - source ~/.gimme/envs/go1.11.env;

    # Cozy stack v3
    - travis_retry go get -u github.com/cozy/cozy-stack
    - $GOPATH/bin/cozy-stack serve --fs-url "mem://" --log-level warning >/dev/null &
    - sleep 1
    - $GOPATH/bin/cozy-stack instances add --dev --passphrase "$COZY_PASSPHRASE" localhost:8080
    - export COZY_CLIENT_ID=$($GOPATH/bin/cozy-stack instances client-oauth localhost:8080 http://localhost/ test github.com/cozy-labs/cozy-desktop)
    - export COZY_STACK_TOKEN=$($GOPATH/bin/cozy-stack instances token-oauth localhost:8080 "$COZY_CLIENT_ID" io.cozy.files io.cozy.settings)

    # COZY_DESKTOP_DIR
    - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
        hdiutil create -megabytes 10 -fs APFS -volname cozy-desktop "$COZY_DESKTOP_DIR";
        hdiutil attach "${COZY_DESKTOP_DIR}.dmg" -mountpoint "$COZY_DESKTOP_DIR";
      else
        mkdir -p "$COZY_DESKTOP_DIR";
      fi

    # Dummy .env.test (all variables are already set)
    # env-cmd ignores the file when empty
    - echo "NODE_ENV=test" > "${TRAVIS_BUILD_DIR}/.env.test"

before_script:
    # Set up display for electron-mocha
    - export DISPLAY=:99.0
    - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
        ( sudo Xvfb :99 -ac -screen 0 1024x768x8; echo ok )&
      else
        sh -e /etc/init.d/xvfb start;
      fi
    - sleep 3 # give xvfb some time to start

script:
    - travis_retry yarn
    - yarn build
    - yarn lint
    - yarn test:world --timeout $MOCHA_TIMEOUT --forbid-only
    - yarn test:unit:coverage --timeout $MOCHA_TIMEOUT --forbid-only
    - yarn test:elm
    - yarn test:integration --timeout $MOCHA_TIMEOUT --forbid-only
    - yarn test:scenarios --timeout $MOCHA_TIMEOUT --forbid-only
    - |
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        docker run --rm \
          $(env | \
            grep -Eo '^[^\s=]*(DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_)[^\s=]*' | \
            sed 's/^/-e /;/^$/d' | \
            paste -sd ' ' \
          ) \
          -v ${PWD}:/project \
          -v ~/.cache/electron:/root/.cache/electron \
          -v ~/.cache/electron-builder:/root/.cache/electron-builder \
          electronuserland/builder:8 \
          /bin/bash -c "yarn dist:all"
      else
        yarn dist:all
      fi

after_success:
    - bash <(curl -s https://codecov.io/bash)

after_failure:
    - $CXX --version
    - netstat -lntp
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cat couchdb.log; fi
